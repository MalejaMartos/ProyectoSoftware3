/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package GUI;

import com.itextpdf.text.BaseColor;
import com.itextpdf.text.Document;
import com.itextpdf.text.DocumentException;
import com.itextpdf.text.Element;
import com.itextpdf.text.Paragraph;
import com.itextpdf.text.pdf.PdfPCell;
import com.itextpdf.text.pdf.PdfPTable;
import com.itextpdf.text.pdf.PdfWriter;
import java.awt.Image;
import java.awt.Toolkit;
import java.io.FileNotFoundException;
import java.io.FileOutputStream;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.text.SimpleDateFormat;
import java.util.Date;
import javax.swing.JOptionPane;
import logica.dataConnection;

/**
 *
 * @author user
 */
public class VentanaGenerarInforme extends javax.swing.JFrame {

    BaseColor grisClaro = new BaseColor(230, 230, 230);
    BaseColor azulClaro = new BaseColor(124, 195, 255);

    PreparedStatement pst;
    Connection cn;
    ResultSet result;

    /**
     * Creates new form VentanaGenerarInforme
     */
    public VentanaGenerarInforme() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jDateChooserFechaInicial = new com.toedter.calendar.JDateChooser();
        jDateChooserFechaFinal = new com.toedter.calendar.JDateChooser();
        jButtonGenerarInform = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Generar Informe");
        setIconImage(getIconImage());
        setResizable(false);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosed(java.awt.event.WindowEvent evt) {
                formWindowClosed(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel1.setText("Generar Informe");

        jLabel2.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel2.setText("Fecha Incial:");

        jLabel3.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel3.setText("Fecha Final:");

        jButtonGenerarInform.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jButtonGenerarInform.setText("Generar Informe");
        jButtonGenerarInform.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonGenerarInformActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(21, 21, 21)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jLabel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jDateChooserFechaInicial, javax.swing.GroupLayout.PREFERRED_SIZE, 213, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jDateChooserFechaFinal, javax.swing.GroupLayout.PREFERRED_SIZE, 213, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(jButtonGenerarInform)))
                .addContainerGap())
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(jLabel1)
                .addGap(78, 78, 78))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(47, 47, 47)
                .addComponent(jLabel1)
                .addGap(32, 32, 32)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jDateChooserFechaInicial, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(30, 30, 30)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jDateChooserFechaFinal, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 29, Short.MAX_VALUE)
                .addComponent(jButtonGenerarInform)
                .addGap(18, 18, 18))
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void jButtonGenerarInformActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonGenerarInformActionPerformed
        // TODO add your handling code here:
        Document documento = new Document();

        Date fechaInicial = formatFecha(jDateChooserFechaInicial.getDate());
        Date fechaFinal = formatFecha(jDateChooserFechaFinal.getDate());
        if (validarFechas(fechaInicial, fechaFinal)) {
            cn = dataConnection.conexion();
            try {
                pst = cn.prepareStatement(
                        "select est.nombres,est.apellidos,est.tipoPoblacion, count(*) as asistencias_Semanales from  instituto_montenegro im JOIN estudiante est ON(im.documentoEstudiante=est.documento) WHERE fechaIngreso between ? AND ? GROUP BY est.nombres;");
                pst.setDate(1, (java.sql.Date) fechaInicial);
                pst.setDate(2, (java.sql.Date) fechaFinal);
                result = pst.executeQuery();

                PdfWriter.getInstance(documento, new FileOutputStream("informe.pdf"));
                documento.open();

                documento.add(new Paragraph("Informe Semanal de asistencias \n"));
                Paragraph saltoLinea = new Paragraph();
                saltoLinea.add("\n\n");
                documento.add(saltoLinea);
                documento.add(saltoLinea);
                // Anchos de las columnas
                float anchosFilas[] = {2f, 2f, 2f, 2f};
                PdfPTable tabla = new PdfPTable(anchosFilas);
                String rotulosColumnas[] = {"Nombres", "Apellidos", "tipo Poblacion", "asistencias Semanales"};
                // Porcentaje que ocupa a lo ancho de la pagina del PDF
                tabla.setWidthPercentage(100);
                // Alineacion horizontal centrada
                tabla.setHorizontalAlignment(Element.ALIGN_CENTER);
                // agregar celda que ocupa las 4 columnas de los rotulos
                PdfPCell cell = new PdfPCell(new Paragraph("Asistencias Semanales"));
                cell.setColspan(4);
                // Centrar contenido de celda
                cell.setHorizontalAlignment(Element.ALIGN_CENTER);
                // Color de fondo de la celda
                cell.setBackgroundColor(azulClaro);
                tabla.addCell(cell);

                for (int i = 0; i < rotulosColumnas.length; i++) {
                    cell = new PdfPCell(new Paragraph(rotulosColumnas[i]));
                    cell.setVerticalAlignment(Element.ALIGN_MIDDLE);
                    cell.setHorizontalAlignment(Element.ALIGN_CENTER);
                    cell.setBackgroundColor(grisClaro);
                    tabla.addCell(cell);
                }
                while (result.next()) {

                    cell = new PdfPCell(new Paragraph(result.getString("nombres")));
                    tabla.addCell(cell);
                    cell = new PdfPCell(new Paragraph(result.getString("apellidos")));
                    tabla.addCell(cell);
                    cell = new PdfPCell(new Paragraph(result.getString("tipoPoblacion")));
                    tabla.addCell(cell);
                    cell = new PdfPCell(new Paragraph(result.getString("asistencias_Semanales")));
                    tabla.addCell(cell);

                }
                documento.add(tabla);
                documento.close();
                JOptionPane.showMessageDialog(null, "Informe Generado");
                cn.close();
            } catch (SQLException | FileNotFoundException | DocumentException e1) {
                // TODO Auto-generated catch block
                e1.printStackTrace();
            }
        } else {
            JOptionPane.showMessageDialog(null, "Fechas mal ingresadas, por favor reviselas");
        }
    }//GEN-LAST:event_jButtonGenerarInformActionPerformed

    private void formWindowClosed(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowClosed
        // TODO add your handling code here:
        VentanaAdministrador.cambiarEstado(true);
    }//GEN-LAST:event_formWindowClosed

    public Date formatFecha(Date fecha) {
        SimpleDateFormat format1 = new SimpleDateFormat("yyyy-MM-dd");
        String date1 = format1.format(fecha);
        fecha = java.sql.Date.valueOf(date1);
        return fecha;

    }

    /*agrega el contenido del documento; para este ejemplo agrega una tabla con
	* datos y una imagen
	* Espera como entrada el documento donde agregara el contenido
     */
    private void agregarContenido(Document document) throws DocumentException {
        Paragraph ParrafoHoja = new Paragraph();

        /*Agregamos una linea en blanco al principio del documento
         */
        agregarLineasEnBlanco(ParrafoHoja, 1);

        agregarLineasEnBlanco(ParrafoHoja, 1);
        /* 1.- AGREGAMOS LA TABLA
		 * agregarTabla(ParrafoHoja);
		 * Agregar 2 lineas en blanco 
         */
        agregarLineasEnBlanco(ParrafoHoja, 2);
        /* 2.- AGREGAMOS LA IMAGEN */
        // try {
        // Image im = Image.getInstance("logo_mysql.gif");
        // im.setAlignment(Image.ALIGN_CENTER | Image.TEXTWRAP);
        // im.setWidthPercentage(50);
        // ParrafoHoja.add(im);
        // } catch (Exception e) {
        // e.printStackTrace();
        // }

        document.add(ParrafoHoja);

    }

    /* Agrega las lineas en blanco especificadas a un parrafo especificado */
    private static void agregarLineasEnBlanco(Paragraph parrafo, int nLineas) {
        for (int i = 0; i < nLineas; i++) {
            parrafo.add(new Paragraph(" "));
        }
    }

    @Override
    public Image getIconImage() {
        Image retValue = Toolkit.getDefaultToolkit().
                getImage(ClassLoader.getSystemResource("imagenes/Escudo.png"));

        return retValue;
    }

    public boolean validarFechas(Date fechaInicial, Date fechaFinal) {
        if (fechaInicial.compareTo(fechaFinal) > 0) {
            return false;
        } else {
            return true;
        }
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButtonGenerarInform;
    private com.toedter.calendar.JDateChooser jDateChooserFechaFinal;
    private com.toedter.calendar.JDateChooser jDateChooserFechaInicial;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    // End of variables declaration//GEN-END:variables
}
